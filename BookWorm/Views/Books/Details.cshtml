@Scripts.Render("~/Scripts/puku/confirmModal.js")

@using BookWorm.Models
@model BookWorm.ViewModels.BookInformation

<fieldset>
    <legend>Book</legend>
    <div class="row">
         @if (@Html.DisplayFor(model => model.Book.CoverImageUrl) != null && !@Html.DisplayFor(model => model.Book.CoverImageUrl).ToString().IsEmpty())
        {
            <div class="span3">
                <img src="@Model.Book.CoverImageUrl"/>
            </div>
        }
        <div class="span8">
            <h2>@ViewBag.Title</h2>
            <span class="sub-title">
                @Html.DisplayFor(model => model.Book.Subtitle) 
            </span>
            <p>by <strong>@Html.DisplayFor(model => model.Book.Author)</strong></p> 
            <hr />
            <p>ISBN: <em>@Html.DisplayFor(model => model.Book.Isbn)</em></p>    
            <p>Publisher: <em>@Html.DisplayFor(model => model.Book.Publisher)</em></p>
            @if (@Html.DisplayFor(model => model.Book.Illustrator) != null && !@Html.DisplayFor(model => model.Book.Illustrator).ToString().IsEmpty())
            {
                <p>Illustrator: <em>@Html.DisplayFor(model => model.Book.Illustrator)</em></p>
            }
            <p>Editor: <em>@Html.DisplayFor(model => model.Book.Editor)</em></p>
            <p>Language: <em>@Html.DisplayFor(model => model.Book.Language)</em></p>
            <p>Genre: <em>@Html.DisplayFor(model => model.Book.Genre)</em></p>
            <p>Age Range: <em>@Html.DisplayFor(model => model.Book.AgeRange)</em></p>
            <p>Country: <em>@Html.DisplayFor(model => model.Book.Country)</em></p>
            @if (@Html.DisplayFor(model => model.Book.Description) != null && !@Html.DisplayFor(model => model.Book.Description).ToString().IsEmpty())
            {
                <p>Description: <em>@Html.DisplayFor(model => model.Book.Description)</em></p>
            }
        </div>
       
    </div>
    <div class="some-small-space">
            @Html.ActionLink("Back to Books", "List")
        </div>
         @if (Html.ViewContext.HttpContext.User.Identity.IsAuthenticated)
        {
    <div class="well">
        <div class="row-fluid">
            <div class="span7">
        <span class="lead">Admin Tools</span>
            @Html.ActionLink("Edit Book", "Edit", new {id = Model.Book.Id})
            @Html.Raw(" |")
            @Html.ActionLink("Add a Book Post", "Create", "BookPosts", new { bookId = Model.Book.Id }, null)
            </div>
            <div class="span5">
                 @using (Html.BeginForm("Delete", "Books", new { id = Model.Book.Id }))
            {
                @Html.HttpMethodOverride(HttpVerbs.Delete)
                <input type="submit" class="btn btn-danger pull-right" value="Delete Book" title="Permanently remove this book from PUKU's catalog." data-confirm="This action can not be undone. Are you sure you want to delete this book?" />
            }   
            </div>
        </div>
    </div>
        }
  
</fieldset>

<div class="content-wrapper">
    <div class="accordion" id="accordion2">
  <div class="accordion-group">
      <div class="accordion-heading">
          <a href="#" class="pull-right accordion-toggle">

          <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapseOne">
              Reviews
          </a>
      </div>
      @if (Model.Reviews.Any())
        {   
            @Html.Partial("BookPostList", Model.Reviews)
        }
      </div>
  </div>
</div>


@if (Model.Events.Any())
{   
    <h3>Events</h3>
    @Html.Partial("BookPostList", Model.Events)
}

@if (Model.News.Any())
{   
    <h3>News</h3>
    @Html.Partial("BookPostList", Model.News)
}

@if (Model.TeachingGuides.Any())
{   
    <h3>Teaching Guides</h3>
    @Html.Partial("BookPostList", Model.TeachingGuides)
}

@if (Model.Other.Any())
{   
    <h3>Other</h3>
    @Html.Partial("BookPostList", Model.Other)
}
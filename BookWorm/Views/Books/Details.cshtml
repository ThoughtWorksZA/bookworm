@Scripts.Render("~/Scripts/puku/confirmModal.js")

@using BookWorm.Helpers
@using BookWorm.Models
@model BookWorm.ViewModels.BookInformation
<div class="row-fluid">
    <div class="row-content">
        <div class="span7">
            <ul class="breadcrumb">
                <li>@Html.ActionLink("Books", "List") <span class="divider">/</span></li>
                <li class="active">@ViewBag.Title</li>
            </ul>
        </div>
        <div class="span2">
            <a href="https://twitter.com/share" class="twitter-share-button" data-lang="en">Tweet</a>
        </div>
        <div class="span3">
            <div class="fb-like" data-href="http://www.puku.co.za/Books/@Html.DisplayFor(model => model.Model.Id)/@UrlFilter.FilterInvalidCharacters(Model.Model.Title) " data-send="true" data-layout="button_count" data-width="450" data-show-faces="true" data-action="recommend"></div>
        </div>
    </div>
</div>
<div class="row-fluid">
    <div class="row-content">
        <div class="span12">
        <h2>@ViewBag.Title</h2>
            <span class="sub-title">
                @Html.DisplayFor(model => model.Model.Subtitle) 
            </span>
            <p>by @Html.DisplayFor(model => model.Model.Author)</p> 
        </div>
    </div>
</div>

<div class="row-fluid gray-body-row">
    <div class="row-content">
        <div class="span12">
            <fieldset>
                <div class="row">
                    @{ var defaultBookCoverDisplay = "block"; }
                    @if (@Html.DisplayFor(model => model.Model.CoverImageUrl) != null && !@Html.DisplayFor(model => model.Model.CoverImageUrl).ToString().IsEmpty())
                    {
                        defaultBookCoverDisplay = "none";
                        <div class="span3">
                            <img alt="@Model.Model.Title" src="@Model.Model.CoverImageUrl" onerror=" $('#default-image').show();$(this).parent().remove(); "/>
                        </div>
                    }
                    
                    <div id="default-image" class="book-image span3 default-cover-image" style="display: @defaultBookCoverDisplay">
                        <div class="default-cover-info">
                            <h4>@Model.Model.Title</h4>
                            @Html.DisplayFor(model => model.Model.Author)
                        </div>
                    </div>
                    <div class="span8">
                        <p>ISBN: <em>@Html.DisplayFor(model => model.Model.Isbn)</em></p>    
                        <p>Publisher: <em>@Html.DisplayFor(model => model.Model.Publisher)</em></p>
                        @if (@Html.DisplayFor(model => model.Model.Illustrator) != null && !@Html.DisplayFor(model => model.Model.Illustrator).ToString().IsEmpty())
                        {
                            <p>Illustrator: <em>@Html.DisplayFor(model => model.Model.Illustrator)</em></p>
                        }
                        <p>Editor: <em>@Html.DisplayFor(model => model.Model.Editor)</em></p>
                        <p>Language: <em>@Html.DisplayFor(model => model.Model.Language)</em></p>
                        <p>Genre: <em>@Html.DisplayFor(model => model.Model.Genre)</em></p>
                        <p>Age Range: <em>@Html.DisplayFor(model => model.Model.AgeRange)</em></p>
                        <p>Country: <em>@Html.DisplayFor(model => model.Model.Country)</em></p>
                        @if (@Html.DisplayFor(model => model.Model.Description) != null && !@Html.DisplayFor(model => model.Model.Description).ToString().IsEmpty())
                        {
                            <p>Description: <em>@Html.DisplayFor(model => model.Model.Description)</em></p>
                        }
                    </div>
       
                </div>
                <div class="some-small-space">
                    
                </div>
                @if (Html.ViewContext.HttpContext.User.Identity.IsAuthenticated)
                {
                    <div class="well">
                        <div class="row-fluid">
                            <div class="span7">
                                <span class="lead">Admin Tools </span>
                                @Html.ActionLink("Edit Book", "Edit", new {id = Model.Model.Id})
                                |   
                                @Html.ActionLink("Add a Book Post", "Create", "BookPosts", new { bookId = Model.Model.Id }, null)
                            </div>
                            <div class="span5">
                                @using (Html.BeginForm("Delete", "Books", new { id = Model.Model.Id }))
                                {
                                    @Html.HttpMethodOverride(HttpVerbs.Delete)
                                    <input type="submit" class="btn btn-danger pull-right" value="Delete Book" title="Permanently remove this book from PUKU's catalog." data-confirm="This action can not be undone. Are you sure you want to delete this book?" />
                                }   
                            </div>
                        </div>
                    </div>
                }
            </fieldset>
        </div>
    </div>
</div>
<script type="text/javascript">
    var currentToggleItem = "";
    function determineToggle(newToggleItem) {
        if (currentToggleItem == "") {
            currentToggleItem = newToggleItem;
        }
    };
    $("#document").ready(function () {
        $("#" + currentToggleItem).collapse();
    });
</script>
@if (@Model.BookPostInformations.Any()) {
<div class="row-fluid">
    <div class="row-content">
        <div class="span12">
            <p class="lead">Related Information</p>
            <div class="" id="posts-accordion">
                @if (Model.Reviews.Any())
                {
                    @Html.Partial("BookPostList", Model.Reviews)
                    <script type="text/javascript"> determineToggle("Reviews");</script>
                }
                @if (Model.TeachingGuides.Any())
                {
                    @Html.Partial("BookPostList", Model.TeachingGuides)
                    <script type="text/javascript"> determineToggle("TeachingGuides");</script>
                }
                @if (Model.News.Any())
                { 
                    @Html.Partial("BookPostList", Model.News)
                    <script type="text/javascript"> determineToggle("News");</script>
                }
                @if (Model.Events.Any())
                { 
                    @Html.Partial("BookPostList", Model.Events)
                    <script type="text/javascript"> determineToggle("Events");</script>
                }
                @if (Model.Other.Any())
                { 
                    @Html.Partial("BookPostList", Model.Other)
                    <script type="text/javascript"> determineToggle("Other");</script>
                }
            </div>
        </div>
    </div>
</div>
}

<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>



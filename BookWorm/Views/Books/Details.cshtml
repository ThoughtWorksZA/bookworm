@Scripts.Render("~/Scripts/puku/confirmModal.js")

@using BookWorm.Models
@model BookWorm.ViewModels.BookInformation
<div class="row-fluid">
    <div class="row-content">
        <div class="span12">
            <ul class="breadcrumb">
                <li>@Html.ActionLink("Books", "List") <span class="divider">/</span></li>
                <li class="active">@ViewBag.Title</li>
            </ul>
            <h2>@ViewBag.Title</h2>
                        <span class="sub-title">
                            @Html.DisplayFor(model => model.Book.Subtitle) 
                        </span>
                        <p>by @Html.DisplayFor(model => model.Book.Author)</p> 
        </div>
    </div>
</div>
<div class="row-fluid gray-body-row">
    <div class="row-content">
        <div class="span12">
            <fieldset>
                <div class="row">
                    @if (@Html.DisplayFor(model => model.Book.CoverImageUrl) != null && !@Html.DisplayFor(model => model.Book.CoverImageUrl).ToString().IsEmpty())
                    {
                        <div class="span3">
                            <img src="@Model.Book.CoverImageUrl"/>
                        </div>
                    }
                    <div class="span8">
                        <p>ISBN: <em>@Html.DisplayFor(model => model.Book.Isbn)</em></p>    
                        <p>Publisher: <em>@Html.DisplayFor(model => model.Book.Publisher)</em></p>
                        @if (@Html.DisplayFor(model => model.Book.Illustrator) != null && !@Html.DisplayFor(model => model.Book.Illustrator).ToString().IsEmpty())
                        {
                            <p>Illustrator: <em>@Html.DisplayFor(model => model.Book.Illustrator)</em></p>
                        }
                        <p>Editor: <em>@Html.DisplayFor(model => model.Book.Editor)</em></p>
                        <p>Language: <em>@Html.DisplayFor(model => model.Book.Language)</em></p>
                        <p>Genre: <em>@Html.DisplayFor(model => model.Book.Genre)</em></p>
                        <p>Age Range: <em>@Html.DisplayFor(model => model.Book.AgeRange)</em></p>
                        <p>Country: <em>@Html.DisplayFor(model => model.Book.Country)</em></p>
                        @if (@Html.DisplayFor(model => model.Book.Description) != null && !@Html.DisplayFor(model => model.Book.Description).ToString().IsEmpty())
                        {
                            <p>Description: <em>@Html.DisplayFor(model => model.Book.Description)</em></p>
                        }
                    </div>
       
                </div>
                <div class="some-small-space">
                    
                </div>
                @if (Html.ViewContext.HttpContext.User.Identity.IsAuthenticated)
                {
                    <div class="well">
                        <div class="row-fluid">
                            <div class="span7">
                                <span class="lead">Admin Tools </span>
                                @Html.ActionLink("Edit Book", "Edit", new {id = Model.Book.Id})
                                |   
                                @Html.ActionLink("Add a Book Post", "Create", "BookPosts", new { bookId = Model.Book.Id }, null)
                            </div>
                            <div class="span5">
                                @using (Html.BeginForm("Delete", "Books", new { id = Model.Book.Id }))
                                {
                                    @Html.HttpMethodOverride(HttpVerbs.Delete)
                                    <input type="submit" class="btn btn-danger pull-right" value="Delete Book" title="Permanently remove this book from PUKU's catalog." data-confirm="This action can not be undone. Are you sure you want to delete this book?" />
                                }   
                            </div>
                        </div>
                    </div>
                }
            </fieldset>
        </div>
    </div>
</div>
@if (@Model.BookPostInformations.Any()) {
<div class="row-fluid">
    <div class="row-content">
        <div class="span12">
            <p class="lead">Related Information</p>
            <div class="" id="posts-accordion">
                @if (Model.Reviews.Any())
                {
                    @Html.Partial("BookPostList", Model.Reviews)
                }
                @if (Model.TeachingGuides.Any())
                {
                    @Html.Partial("BookPostList", Model.TeachingGuides)
                }
                @if (Model.News.Any())
                { 
                    @Html.Partial("BookPostList", Model.News)
                }
                @if (Model.Events.Any())
                { 
                    @Html.Partial("BookPostList", Model.Events)
                }
                @if (Model.Other.Any())
                { 
                    @Html.Partial("BookPostList", Model.Other)
                }
            </div>
        </div>
    </div>
</div>
}



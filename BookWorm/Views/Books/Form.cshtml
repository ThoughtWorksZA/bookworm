@using BookWorm.Models.Validations
@model BookWorm.ViewModels.BookInformation

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    if (ViewBag.Method != null && ViewBag.Method == "PUT")
     {
         @Html.HttpMethodOverride(HttpVerbs.Put)
     }

    <fieldset>
        <legend>Book</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Book.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Book.Title)
            @Html.ValidationMessageFor(model => model.Book.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Book.Subtitle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Book.Subtitle)
            @Html.ValidationMessageFor(model => model.Book.Subtitle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Book.Author)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Book.Author)
            @Html.ValidationMessageFor(model => model.Book.Author)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Book.Illustrator)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Book.Illustrator)
            @Html.ValidationMessageFor(model => model.Book.Illustrator)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Book.Editor)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Book.Editor)
            @Html.ValidationMessageFor(model => model.Book.Editor)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Book.Isbn)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Book.Isbn)
            @Html.ValidationMessageFor(model => model.Book.Isbn)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Book.Publisher)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Book.Publisher)
            @Html.ValidationMessageFor(model => model.Book.Publisher)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Book.Language)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Book.Language, Model.ValidLanguages())
            @Html.ValidationMessageFor(model => model.Book.Language)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Book.Genre)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Book.Genre)
            @Html.ValidationMessageFor(model => model.Book.Genre)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Book.RecommendedAgeGroup)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Book.RecommendedAgeGroup, Model.ValidAgeGroups())
            @Html.ValidationMessageFor(model => model.Book.RecommendedAgeGroup)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Book.Country)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Book.Country, Model.ValidCountries())            
            @Html.ValidationMessageFor(model => model.Book.Country)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Book.CoverImageUrl)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Book.CoverImageUrl)
            @Html.ValidationMessageFor(model => model.Book.CoverImageUrl)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Book.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Book.Description)
            @Html.ValidationMessageFor(model => model.Book.Description)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

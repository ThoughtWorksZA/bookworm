@Scripts.Render("~/Scripts/puku/clickableDiv.js")

@using PagedList.Mvc
@model BookWorm.ViewModels.FilterInformation

<div class="row-fluid">
    <div class="row-content">
        <div class="span12">
            <p class="lead">@ViewBag.Title</p>
            @if (TempData["flashNotice"] != null && !TempData["flashNotice"].ToString().IsEmpty())
            {
                <div><i class="icon-inbox"></i>@TempData["flashNotice"]</div>
                <div class="some-space">
                    <center><quote class="lead">“A room without books is like a body without a soul.” 
                     <span style="font-size: small">― Marcus Tullius Cicero</span></quote></center>
                </div>
            }
            <p>
                @if (Html.ViewContext.HttpContext.User.Identity.IsAuthenticated)
                {
                    @Html.ActionLink("Create New", "Create", null, new { id = "createNewBookLink" })
                }
            </p>
        </div>
    </div>
</div>
<div class="row gray-body-row">
    <div class="row-content">
        <div class="span12">
            <div class="row-fluid">
                <div class="span3">
                    <div class="filters">
                        <div class="popover-title"><i class="icon-tags"></i> Narrow your search</div>
                        <div class="popover-content">
                            @if (!Convert.ToBoolean(ViewBag.HideFilter))
                            {
                                @Html.Partial("Filter")
                            }
                        </div>
                    </div>
                </div>
                <div class="span9">
                    <ol>
                        @foreach (var item in Model.BookInformations)
                        {
                            <li>
                                <div id="clickable-div" data-clickable-url="/Books/Details/@item.Model.Id">
                                    <div class="book-cover">
                                        @if (@Html.DisplayFor(model => item.Model.CoverImageUrl) != null && !@Html.DisplayFor(model => item.Model.CoverImageUrl).ToString().IsEmpty())
                                        {

                                            <img class="book-image" src="@item.Model.CoverImageUrl"/>
                                        }
                                        else
                                        {
                                            <div class="book-image default-cover-image">
                                                <div class="default-cover-info">
                                                    <h4>@item.Model.Title</h4>
                                                    @Html.DisplayFor(model => item.Model.Author)
                                                </div>
                                            </div>
                                        }
                                        <div class="book-cover-hover-info">
                                            <div class="book-cover-info-wrapper">
                                                <strong>@item.Model.Title</strong><br />
                                                @Html.DisplayFor(model => item.Model.Author)
                                            </div>
                                        </div>
                                        <div class="row-fluid book-cover-info">
                                            <div class="span4 label-age-range">
                                                @Html.DisplayFor(model => item.Model.AgeRange) years
                                            
                                            </div>
                                            <div class="span4 label-language">
                                                @Html.DisplayFor(model => item.Model.Language)
                                            </div>
                                            <div class="span4 label-genre">
                                                @Html.DisplayFor(model => item.Model.Genre)
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </li>
            
       
                        }

                    </ol>
                    @Html.PagedListPager( Model.BookInformations, page => Model.PaginationUrl(ViewContext.RouteData.Values["Action"].ToString(), page), PagedListRenderOptions.ClassicPlusFirstAndLast )
                </div>
            </div>
        </div>
    </div>
</div>

 @Scripts.Render("~/Scripts/puku/clickableDiv.js")

@model BookWorm.ViewModels.FilterInformation

<h2>@ViewBag.Title</h2>
<hr/>
 @if (TempData["flashNotice"] != null && !TempData["flashNotice"].ToString().IsEmpty())
{
    <div><i class="icon-inbox"></i> @TempData["flashNotice"]</div>
    <div class="some-space"><center><quote class="lead">“A room without books is like a body without a soul.” 
    <span style="font-size: small">― Marcus Tullius Cicero</span></quote></center></div>
}
<p> 
    @if (Html.ViewContext.HttpContext.User.Identity.IsAuthenticated)
    {
        @Html.ActionLink("Create New", "Create", null, new {id = "createNewBookLink"})
    }
</p>



<div class="wrapper">
    <div class="row">
        <div class="span2">
            @if (!Convert.ToBoolean(ViewBag.HideFilter))
{
    @Html.Partial("Filter")

}
        </div>
        <div class="span10">
             <ol>
  
        @foreach (var item in Model.BookInformations)
        {
        
            <li>
                <div id="clickable-div" data-clickable-url="/Books/Details/@item.Book.Id">
               
                    <div class="book-cover">
                        @if (@Html.DisplayFor(model => item.Book.CoverImageUrl) != null && !@Html.DisplayFor(model => item.Book.CoverImageUrl).ToString().IsEmpty())
                        {
                            <img class="book-image" src="@item.Book.CoverImageUrl"/>
                        }
                        else 
                        {
                            <div class="book-image default-cover-image">
                                <div class="default-cover-info">
                                    <h4>@item.Book.Title</h4>
                                    @Html.DisplayFor(model => item.Book.Author)
                                </div>
                            </div>
                            
                        }
                        <div class="book-cover-hover-info">
                            <div class="book-cover-info-wrapper">
                                <strong>@item.Book.Title</strong><br />
                                @Html.DisplayFor(model => item.Book.Author)
                            </div>
                        </div>
                        <div class="row-fluid book-cover-info">
                            <div class="span4 label-age-range">
                                @Html.DisplayFor(model => item.Book.AgeRange) years
                            </div>
                            <div class="span4 label-language">
                                @Html.DisplayFor(model => item.Book.Language)
                            </div>
                            <div class="span4 label-genre">
                                @Html.DisplayFor(model => item.Book.Genre)
                            </div>
                           
                        </div>
                    </div>
                </div>  
            </li>
            
       
        }

    </ol>
        </div>
    </div>
   
</div>

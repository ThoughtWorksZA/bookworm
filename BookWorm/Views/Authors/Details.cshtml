@using BookWorm.Helpers
@using Roles = BookWorm.Models.Roles
@model BookWorm.ViewModels.AuthorViewModel

@{
    ViewBag.Title = @Model.Author.Name;
    ViewBag.MetaDescription = MarkDownHelper.SummaryForMetaDescription(Model.Author.Biography, 155);
}
<div class="row-fluid">
    <div class="row-content">
        <div class="span7">
            <ul class="breadcrumb">
                <li><a href="~/Authors">Authors</a><span class="divider">/</span></li>
                <li class="active">@Html.DisplayFor(model => model.Author.Name)</li>
            </ul> 
        </div>
            <div class="span2">
            <a href="https://twitter.com/share" class="twitter-share-button" data-lang="en">Tweet</a>
        </div>
        <div class="span3">
            <div class="fb-like" data-href="http://www.puku.co.za/Authors/@Model.Author.Id/@UrlUtils.ConvertTitleForUrl(Model.Author.Name)" data-send="true" data-layout="button_count" data-width="450" data-show-faces="true" data-action="recommend"></div>
        </div>

        </div>
    </div>
<div class="row-fluid">
    <div class="row-content">
        <div class="span12">
            <p class="lead">@Html.DisplayFor(model => model.Author.Name)</p>
            
        </div>
    </div>
</div>
<div class="row-fluid">
    <div class="row-content">
        <div class="span12">
            <fieldset>
                <div class="display-field">
                    @Html.Raw(MarkDownHelper.Transform(Model.Author.Biography))
                </div>
            </fieldset>
        </div>
    </div>
</div>
@if (Model.Books.Any())
{
        <div class="row-fluid gray-body-row">
            <div class="row-content">
                <div class="span12">
                    <div class="row-fluid">
                        <div class="span10">
                            <p class="lead">@Model.Author.Name's Books</p>
                        </div>
                        <div class="span2">
                            @*                        <i class="icon-th"></i> @Html.ActionLink("All Author Books", "#", "Books", null, new { id = "BooksMenuLink" })*@
                        </div>
                    </div>
                    <div id="lastest-books">
                        <ol>
                            @foreach (var book in Model.Books)
                            {
                                string defaultBookCoverDisplay = "block";
                                <li>
                                    <a class="book-detail-link" href="~/Books/@book.Id/@UrlUtils.ConvertTitleForUrl(book.Title)">
                                        <div class="book-cover">
                                            @if (@Html.DisplayFor(model => book.CoverImageUrl) != null && !@Html.DisplayFor(model => book.CoverImageUrl).ToString().IsEmpty())
                                            {
                                                defaultBookCoverDisplay = "none";
                                                <div class="book-image book-image-wrapper"><img alt="@book.Title" class="book-image" src="@book.CoverImageUrl" onerror=" $('#default-image-@book.Id').show();$(this).parent().remove(); "/></div>

                                            }
                                       
                                            <div id="default-image-@book.Id" class="book-image default-cover-image" style="display: @defaultBookCoverDisplay">
                                        
                                                <div class="default-cover-info">
                                                    <h4>@book.Title</h4>
                                                    @Html.DisplayFor(model => book.Author)
                                                </div>
                                            </div>
                                        
                                            <div class="book-cover-hover-info">
                                                <div class="book-cover-info-wrapper">
                                                    <strong>@book.Title</strong><br />
                                                    @Html.DisplayFor(model => book.Author)
                                                </div>
                                            </div>
                                            <div class="row-fluid book-cover-info">
                                                <div class="span4 label-age-range">
                                                    @Html.DisplayFor(model => book.AgeRange) years
                                                </div>
                                                <div class="span4 label-language">
                                                    @Html.DisplayFor(model => book.Language)
                                                </div>
                                                <div class="span4 label-genre">
                                                    @Html.DisplayFor(model => book.Genre)
                                                </div>
                           
                                            </div>
                                        </div>
                                    </a>  
                                </li>
                            }
                        </ol>
                    </div>
                </div>
            </div>
            <div class="row-content">
                <div class="span2 pull-right">
                    <a href="~/Authors/@Model.Author.Id/@UrlUtils.ConvertTitleForUrl(@Model.Author.Name)/Books">More Books</a>
                </div>
            </div>
        </div>
}
<div class="row-fluid">
    <div class="row-content">
        <div class="span12">
            <p>
                @if (Html.ViewContext.HttpContext.User.IsInRoles(Roles.Admin))
                {
                    @Html.ActionLink("Back to Authors", "List")
                    @Html.Raw(" | ")<i class="icon-edit"></i>
                    @Html.ActionLink("Edit", "Edit", new { id = Model.Author.Id })
                }
            </p>
        </div>
    </div>
</div>
    <script>!function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = "https://platform.twitter.com/widgets.js"; fjs.parentNode.insertBefore(js, fjs); } }(document, "script", "twitter-wjs");</script>

@using BookWorm.Helpers
@using BookWorm.Models
@model BookWorm.Models.BookPost

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    if (ViewBag.Method != null && ViewBag.Method == "PUT")
    {
            @Html.HttpMethodOverride(HttpVerbs.Put)
            @Html.HiddenFor(model => model.Id)
    }

    <fieldset>
        <legend>BookPost</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Content)
        </div>
        <div class="wmd-panel">
            <div id="wmd-button-bar"></div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Content, new Dictionary<string, object>() {{"id", "wmd-input"}, {"class", "wmd-input"}})
                @Html.ValidationMessageFor(model => model.Content)
            </div>
        
            <div id="wmd-preview" class="wmd-panel wmd-preview"></div>
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Type, EnumHelper.ValidEnumOptions<BookPost.BookPostType>(), "Select type")
            @Html.ValidationMessageFor(model => model.Type)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>

    <script type="text/javascript">
        (function() {
            var converter = Markdown.getSanitizingConverter();
            var editor = new Markdown.Editor(converter);
            editor.run();
        })();
    </script>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>
